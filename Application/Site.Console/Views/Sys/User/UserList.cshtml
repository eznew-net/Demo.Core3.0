
@{
    ViewBag.Title = "管理账户";
}
@using EZNEW.Module.Sys
@using EZNEW.Serialize;
@{
    var statusValues = UserStatus.Enable.GetType().GetEnumValueAndNames();
}
<div id="page-head">
    <div class="layui-row pd-0 mg-0">
        <div class="column layui-form lis_search pd-0 pdb-10">
            <div class="list_search_inputgroup">
                <label class="layui-form-label">姓名/登录名</label>
                <div class="layui-input-inline">
                    <input type="text" id="search_username" placeholder="姓名/登录名" autocomplete="off"
                           class="layui-input">
                </div>
            </div>
            <div class="list_search_inputgroup">
                <label class="layui-form-label">手机/邮箱/QQ</label>
                <div class="layui-input-inline">
                    <input type="text" id="search_contactkey" placeholder="手机/邮箱/QQ" autocomplete="off"
                           class="layui-input">
                </div>
            </div>
            <div class="list_search_inputgroup mgl-5">
                @Html.AuthIcoButton("搜索", "User", "SearchUser",
                new { @class = "layui-btn layui-btn-sm", id = "search_btn" }
                , new { @class = "icon-search" })
            </div>
        </div>
    </div>

</div>
<div id="page-body">
    <table id="demo" lay-filter="demo"></table>
</div>

<div id="page-foot" class="pd-5 h-38"></div>

@section Scripts{
    <script type="text/html" id="table_toolbar">
        @Html.AuthIcoButton("添加用户", "User", "EditUser",
        new { @class = "layui-btn layui-btn-sm layui-btn-gsuccess", id = "create_btn" }
        , new { @class = "icon-plus" })
        @Html.AuthIcoButton("删除选中", "User", "RemoveUser",
        new { @class = "layui-btn layui-btn-sm layui-btn-danger", id = "deleteselect_btn" }
        , new { @class = "icon-trash" })
    </script>

    <script type="text/html" id="toobar_status">
        {{userStatusDict[d.Status]}}
    </script>
    <script type="text/html" id="toobar_createdate">
        {{new Date(d.CreateDate).format('yyyy-MM-dd hh:mm:ss')}}
    </script>

    <script type="text/html" id="user_bar">
        @Html.AuthIcoButton("详情", "User", "UserDetail",
        new { @class = "layui-btn layui-btn-xs layui-btn-ginfo", lay_event = "user_detail" }
        , new { @class = "icon-file-alt" })
        @Html.AuthIcoButton("编辑", "User", "EditUser",
        new { @class = "layui-btn layui-btn-xs layui-btn-gprimary", lay_event = "user_edit" }
        , new { @class = "icon-edit" })
        {{#  if(d.Status==@((int)UserStatus.Enable)){ }}
        @Html.AuthIcoButton("锁定", "User", "ModifyUserStatus",
        new { @class = "layui-btn layui-btn-xs layui-btn-warm", lay_event = "user_lock" }
        , new { @class = "icon-lock" })
        {{#  }else{ }}
        @Html.AuthIcoButton("解锁", "User", "ModifyUserStatus",
        new { @class = "layui-btn layui-btn-xs layui-btn-warm", lay_event = "user_unlock" }
        , new { @class = "icon-unlock" })
        {{#  } }}
        @Html.AuthIcoButton("修改密码", "User", "ModifyUserPassword",
        new { @class = "layui-btn layui-btn-xs layui-btn-gwarning", lay_event = "user_modifypwd" }
        , new { @class = "icon-key" })
        @Html.AuthIcoButton("删除", "User", "RemoveUser",
        new { @class = "layui-btn layui-btn-xs layui-btn-danger", lay_event = "user_del" }
        , new { @class = "icon-trash" })
    </script>

    <script type="text/javascript">
        var userStatusDict = JSON.parse('@Html.Raw(JsonSerializeHelper.ObjectToJson(statusValues))');
        $(function () {
            InitTable({
                elem: 'demo',
                toolbar: '#table_toolbar',
                defaultToolbar:[],
                cols: [[
                    { type: 'checkbox', fixed: 'left' },
                    { field: 'RealName', title: '姓名', width: 150, sort: true, fixed: 'left' }
                    , { field: 'UserName', title: '登录名', width: 130 }
                    , { field: 'Mobile', title: '手机', width: 130 }
                    , { field: 'Email', title: '邮箱', minWidth: 120 }
                    , { field: 'Status', title: '状态', align: 'center', width: 80, templet: '#toobar_status' }
                    , { field: 'CreateDate', title: '添加时间', width: 160, templet:'#toobar_createdate' }
                    , { width: 330, align: 'center', fixed: 'right', toolbar: '#user_bar' }
                ]]
            }, LoadUserData);

            //搜索事件
            $("#search_btn").click(function () {
                LoadUserData();
            });

            //创建用户
            $("#create_btn").click(function () {
                OpenEditUserPage('@Url.Action("EditUser","User")', '添加用户');
            });

            //删除用户
            $("body").on("click", ".btn_delete", function () {
                var sysNo = $(this).attr("sysno");
                DeleteUser(sysNo);
            });

            //删除选中
            $("#deleteselect_btn").click(function () {
                var checkedValues = GetTableCheckData("demo").data;
                if (!checkedValues || checkedValues.length <= 0) {
                    ErrorMsg("还没有选择要删除的信息");
                    return;
                }
                DeleteUser(checkedValues);
            });

            //表格事件监听
            ListenTableEvent('demo', function (obj, btn) {
                var data = obj.data;
                var layEvent = obj.event;
                var tr = obj.tr;
                switch (layEvent) {
                    case "user_detail":
                        var detailUrl = '@Url.Action("UserDetail", "User", new { id="sys_no"})'.replace('sys_no', data.Id);
                        OpenEditUserPage(detailUrl, '用户详情');
                        break;
                    case "user_edit":
                        var editUrl = '@Url.Action("EditUser", "User", new { id="sys_no"})'.replace('sys_no', data.Id);
                        OpenEditUserPage(editUrl, '编辑用户');
                        break;
                    case "user_lock":
                        ModifyStatus(data.Id,@((int)UserStatus.Locked), '账户锁定后将不能登陆,确认锁定吗?');
                        break;
                    case "user_unlock":
                        ModifyStatus(data.Id,@((int)UserStatus.Enable),'账户解锁后将恢复登陆,确认解锁吗?');
                        break;
                    case "user_modifypwd":
                        OpenDialogPage({
                            content: '@Url.Action("ModifyUserPassword", "User", new { UserId = "_id"})'.replace('_id', data.Id),
                            area: ['550px', '300px'],
                            title: '修改用户登录密码',
                        });
                        break;
                    case "user_del":
                        DeleteUser([data]);
                        break;
                }
            });
        });

        //加载用户数据
        function LoadUserData() {
            var userName = $.trim($("#search_username").val());
            var contactName = $.trim($("#search_contactkey").val());
            var data = { NameMateKey: userName, ContactMateKey: contactName };
            PageSearch({
                url: '@Url.Action("SearchUser", "User")',
                method: "post",
                listEle: "demo",
                pagerEle: "page-foot",
                data: data
            });
        }

        //删除管理用户
        function DeleteUser(datas) {
            if (!datas || datas.length<1) {
                return;
            }
            var ids = [];
            for (var d in datas) {
                var nowData = datas[d];
                ids.push(nowData.Id);
            }
            ConfirmMsg('用户删除后将不能恢复，确认删除吗?', function () {
                $.post('@Url.Action("RemoveUser", "User")', { ids: ids }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        LoadUserData();
                    }
                });
            });
        };

        //打开管理用户编辑页面
        function OpenEditUserPage(url, tit) {
            if (!url || $.trim(url) == "") {
                return;
            }
            window.top.OpenPage({
                url: url,
                title: tit
            });
        }

        //修改用户状态
        function ModifyStatus(id, status, msg) {
            ConfirmMsg(msg, function () {
                $.post('@Url.Action("ModifyUserStatus", "User")', { id: id,status:status }, function (res) {
                    ResultMsg(res);
                    if (res.Success) {
                        LoadUserData();
                    }
                });
            });
        }
    </script>
}